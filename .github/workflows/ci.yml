name: Java CI Build

on:
  push:
    branches: ["master", "main"]
  pull_request:
    branches: ["master", "main"]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: read
      checks: write  # Для публикации test results
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    services:
      postgres:
        image: postgres:15.6
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: local_dev_password
          POSTGRES_DB: auth_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U user -d auth_db"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          
      redis:
        image: redis:7.2.5-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: ${{ github.ref != 'refs/heads/main' }}

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build and run tests
        run: ./gradlew build jacocoTestReport
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/auth_db
          SPRING_DATASOURCE_USERNAME: user
          SPRING_DATASOURCE_PASSWORD: local_dev_password
          SPRING_DATA_REDIS_HOST: localhost
          SPRING_DATA_REDIS_PORT: 6379

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: build/reports/tests/test

      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v5
      #   if: always()
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     files: build/reports/jacoco/test/jacocoTestReport.xml
      #     fail_ci_if_error: false
      #     verbose: true
